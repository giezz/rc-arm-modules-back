@startuml

skinparam linetype ortho
left to right direction

class AuthController {
  + createAuthToken(JwtRequest): ResponseEntity<?>
}
class AuthenticationService {
  + authenticate(JwtRequest): JwtResponse
}
class DoctorService {
  + getByLogin(String, Class<T>): Optional<T>
  + getDoctorIdByLogin(String): DoctorIdInfo
}
class ExerciseController {
  + getAll(): ResponseEntity<?>
}
class ExerciseService {
  + getAll(): List<ExerciseResponse>
  + getById(Long): ExerciseResponse
}
class FormController {
  + getAll(): ResponseEntity<?>
  + getModuleFormResults(Long): ResponseEntity<?>
  + getProgramFormResults(Long): ResponseEntity<?>
  + getDetails(Long): ResponseEntity<?>
}
class FormService {
  + getFormDetails(Long): FormDetailsResponse
  + getAll(): List<FormResponse>
}
class ModuleController {
  + addExercise(Long, AddModuleExerciseRequest, Principal): ResponseEntity<?>
  + deleteExercise(Long, Long, Principal): ResponseEntity<?>
  + getById(Long): ResponseEntity<?>
  + addForm(Long, AddModuleFormRequest, Principal): ResponseEntity<?>
  + deleteForm(Long, Long, Principal): ResponseEntity<?>
  + rename(Long, RenameModuleRequest, Principal): ResponseEntity<?>
}
class ModuleFormService {
  + getAllResults(Long, List<Long>): List<ModuleFormResultResponse>
}
class ModuleService {
  + deleteExercise(String, Long, Long): ModuleDetailsResponse
  + addForm(String, AddModuleFormRequest, Long): ModuleDetailsResponse
  + addExercise(String, AddModuleExerciseRequest, Long): ModuleDetailsResponse
  - getModuleIfDoctorCanEditModule(String, Long): Module
  + getById(Long): ModuleDetailsResponse
  + deleteForm(String, Long, Long): ModuleDetailsResponse
  + renameModule(String, RenameModuleRequest, Long): ModuleDetailsResponse
}
class PatientController {
  + getByCode(Long): ResponseEntity<?>
  + getAll(String, String, String, String, LocalDate, Boolean): ResponseEntity<?>
  + getCurrentRehabProgram(Long): ResponseEntity<?>
  + getRehabPrograms(Long, Long): ResponseEntity<?>
}
class PatientService {
  - getRehabProgramByPatientId(Long, Long): RehabProgram
  + getCurrentRehabProgram(Long): RehabProgramResponse
  - getPatientByCode(Long): Patient
  + getAllRehabPrograms(Long): List<RehabProgramInfo>
  + getByCode(Long): PatientResponse
  + getRehabProgram(Long, Long): RehabProgramResponse
  + getAll(PatientRequest): List<PatientResponse>
}
class ProgramFormService {
  + getAllResults(Long, List<Long>): List<ProgramFormResultResponse>
}
class ProtocolService {
  - transformFormsResults(String, String): String
  + createProtocol(CreateProtocolRequest): Protocol
}
class RehabProgramController {
  + getModulesResults(Long, List<Long>): ResponseEntity<?>
  + createProtocol(Principal, Long, CreateProtocolRequest): ResponseEntity<?>
  + addForm(Principal, AddFormRequest, Long): ResponseEntity<?>
  + getProgramsByCurrentDoctor(Principal, RehabProgramRequest): ResponseEntity<?>
  + create(Principal, CreateRehabProgramRequest): ResponseEntity<?>
  + getFormResults(Long, List<Long>): ResponseEntity<?>
  + addModule(Principal, AddModuleRequest, Long): ResponseEntity<?>
}
class RehabProgramService {
  + addModule(String, AddModuleRequest, Long): RehabProgramResponse
  + createProtocol(String, Long, CreateProtocolRequest): RehabProgramResponse
  + getProgramsByCurrentDoctor(String, RehabProgramRequest): List<RehabProgramResponse>
  - completeRehabProgram(RehabProgram): void
  + create(String, CreateRehabProgramRequest): RehabProgramResponse
  - createCurrentProgram(Long, Patient): RehabProgram
  + addForm(String, AddFormRequest, Long): RehabProgramResponse
}
class RestrictionsService {
  + canDoctorEditRehabProgram(Long, Long): boolean
}
class VariantService {
  + getModuleFormAnsweredVariants(Long): List<VariantResponse>
  + getProgramFormAnsweredVariants(Long): List<VariantResponse>
}
together {
    class FormController
    class ModuleController
    class PatientController
    class RehabProgramController
}
together {
    class DoctorService
    class ModuleService
    class ModuleFormService
}

AuthController         "1" *-> AuthenticationService
ExerciseController     "1" *--> ExerciseService
FormController         "1" *--> FormService
FormController         "1" *--> VariantService
ModuleController       "1" *--> ModuleService
ModuleService          "1" *--> DoctorService
ModuleService          "1" *--> RestrictionsService
PatientController      "1" *--> PatientService
RehabProgramController "1" *--> ModuleFormService
RehabProgramController "1" *--> ProgramFormService
RehabProgramController "1" *--> RehabProgramService
RehabProgramService    "1" *--> DoctorService
RehabProgramService    "1" *--> ProtocolService
@enduml